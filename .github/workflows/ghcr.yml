name: build for ghcr.io

on:
  workflow_dispatch:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-[0-9]+'

env:
  CARGO_TERM_COLOR: always
  LATEST_TAG: latest

permissions:
  contents: read
  packages: write

jobs:

  # Binary build
  build:

    name: Build - ${{ matrix.job.name }}
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        job:
          - { name: "amd64",   target: "x86_64-unknown-linux-musl", docker_platform: "linux/amd64",  s6_platform: "x86_64" }
          - { name: "arm64v8", target: "aarch64-unknown-linux-musl", docker_platform: "linux/arm64",  s6_platform: "aarch64" }
          - { name: "armv7",   target: "armv7-unknown-linux-musleabihf", docker_platform: "linux/arm/v7", s6_platform: "armhf" }
          - { name: "i386",    target: "i686-unknown-linux-musl", docker_platform: "linux/386",    s6_platform: "i686" }

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.70.0"
          override: true
          default: true
          components: rustfmt
          profile: minimal
          target: ${{ matrix.job.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --target=${{ matrix.job.target }}
          use-cross: true  

      - name: Exec chmod
        run: chmod -v a+x target/${{ matrix.job.target }}/release/*

      - name: Publish Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries-linux-${{ matrix.job.name }}
          path: |
            target/${{ matrix.job.target }}/release/hbbr
            target/${{ matrix.job.target }}/release/hbbs
            target/${{ matrix.job.target }}/release/rustdesk-utils
          if-no-files-found: error

  # Build and push multi-arch Docker images to ghcr.io with annotations
  docker:

    name: Docker Build and Push
    needs: build
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      packages: write

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: binaries-linux-*
          path: docker/rootfs/usr/bin

      - name: Make binaries executable
        run: chmod -v a+x docker/rootfs/usr/bin/*

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}-s6
          tags: |
            type=ref,event=branch
            type=raw,value=${{ env.LATEST_TAG }}
            type=raw,value=${{ github.ref_name }}
          labels: |
            org.opencontainers.image.description="RustDesk Server s6-overlay image, running hbbs, hbbr at one container."

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: "./docker"
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/386
          push: true
          provenance: false
          build-args: |
            S6_ARCH=${{ matrix.job.s6_platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.labels }}